
@model auctionwebsite.Models.Product
@using auctionwebsite.Helpers


<div id="gallery" class="span3">
    <a href="~/Img/@(Model.ProductID+"_"+Model.ProductPicName)" title="@Model.ProductName">
        <img src="~/Img/@(Model.ProductID+"_"+Model.ProductPicName)" style="width:100%" alt="@Model.ProductName" />
    </a>
    <div id="differentview" class="moreOptopm carousel slide">
        <div class="carousel-inner">
            <div class="item active">
                @foreach (var item in Model.FileDetails)
                {
                    <a href="~/Img/@(Model.ProductID+"_"+item.FileDetailID+"_"+item.FileName)"> <img style=" width: 75px; height: 75px" src="~/Img/@(Model.ProductID+"_"+item.FileDetailID+"_"+item.FileName)" alt="" /></a>
                }
            </div>
            <div class="item">
                @foreach (var item in Model.FileDetails)
                {
                    <a href="~/Img/@(Model.ProductID+"_"+item.FileDetailID+"_"+item.FileName)"> <img style=" width:29%" src="~/Img/@(Model.ProductID+"_"+item.FileDetailID+"_"+item.FileName)" alt="" /></a>
                }
            </div>
        </div>

    </div>
</div>
<div class="span6">
    <h3>
        @Model.ProductName 
         <span class="btn">
        @if (CurrentContext.IsLogged() == false)
        {
            <i id="UnLikeButton" class="icon-star"></i>
        }
        else
        {
            <i id="LikeButton" class="icon-star"></i>
        }

    </span>
</h3>
<h4>@Model.User.UserName</h4>
<div class="btn-toolbar">
    <div class="btn-group">
        @if(CurrentContext.IsLogged() == true)
        { 
        <a href="#like" class="btn" data-toggle="modal" ><i class="icon-thumbs-up"></i>@Model.User.RateTargetUser.Where(p => p.RateStatus == 0).Count()</a>
        <div id="like" class="modal hide fade in" tabindex="-1" role="dialog" aria-labelledby="login" aria-hidden="false">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                <h3>Nhận xét người dùng (Đánh giá tích cực)</h3>
            </div>
            <div class="modal-body">
                    <div class="control-group">
                        <input type="text" id="inputTxt" placeholder="Ghi nhận xét vào đây">
                    </div>
                <button id="rateLike" type="submit" class="btn btn-success">Gửi</button>
            </div>
        </div>
        <a href="#dislike" class="btn" data-toggle="modal"><i class="icon-thumbs-down"></i>@Model.User.RateTargetUser.Where(p => p.RateStatus == 1).Count()</a>
        <div id="dislike" class="modal hide fade in" tabindex="-1" role="dialog" aria-labelledby="login" aria-hidden="false">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                <h3>Nhận xét người dùng ( Đánh giá không tích cực )</h3>
            </div>
            <div class="modal-body">
                <div class="control-group">
                    <input type="text" id="inputDisLikeTxt" placeholder="Ghi nhận xét vào đây">
                </div>
                <button id="rateDisLike" type="submit" class="btn btn-success">Gửi</button>
            </div>
        </div>
        }
        else
        {
            <button id="unlograteLike" class="btn" data-toggle="modal"><i class="icon-thumbs-up"></i>@Model.User.RateTargetUser.Where(p => p.RateStatus == 0).Count()</button>
            <button id="unlograteDisLike" class="btn" data-toggle="modal"><i class="icon-thumbs-down"></i>@Model.User.RateTargetUser.Where(p => p.RateStatus == 1).Count()</button>
        }
        </div>
</div>
<hr class="soft" />
<div class="control-group">
    <h4>Giá hiện tại :</h4>
    <h3>@Model.ProductPrice đồng</h3>
    <div class="input-group">
        <span class="input-group-addon">Đặt đấu giá</span>
        <input id="bidPrice" type="text" value="@(Model.ProductPrice+Model.ProductTickSize)" class="form-control" aria-label="Amount (to the nearest dollar)" onkeypress='return event.charCode >= 48 && event.charCode <= 57'>VNĐ
        @if (CurrentContext.IsLogged() == true)
        {
            @Html.TextBoxFor(model => model.UserID, new { @Value = @CurrentContext.GetCurUser().UserID, style = "display: none;" })
            @Html.TextBoxFor(model => model.ProductID, new { @Value = @Model.ProductID, style = "display: none;" })
            @Html.TextBoxFor(model => model.ProductPrice, new { @Value = @Model.ProductPrice, style = "display: none;" })
        }
        @if (CurrentContext.IsLogged() == false)
        {
            if(@Model.ProductStatus == 3)
            {
            <button disabled id="unbidButton" class="btn btn-large btn-primary pull-right"> Đấu giá</button>
            }
            else { 
            <button id="unbidButton" class="btn btn-large btn-primary pull-right"> Đấu giá</button>
            }
        }
        else
        {
            if (CurrentContext.IsLogged() == true)
            {
                if(CurrentContext.GetCurUser().UserID==@Model.UserID || Model.ProductStatus==3)
                {
                      <button disabled id="bidButton" class="btn btn-large btn-primary pull-right"> Đấu giá</button>
                }
                else
                {
                     <button id="bidButton" class="btn btn-large btn-primary pull-right"> Đấu giá</button>
                }
            }
        }
    </div>
</div>
<hr class="soft" />
<h4>Có <a href="#list" role="button" data-toggle="modal" style="padding-right:0">@Model.Biddings.Where(p=>p.BidStatus==0).Select(i => i.UserID).Distinct().Count()</a> người tham gia phiên đấu giá</h4>
    <div id="list" class="modal hide fade in" tabindex="-1" role="dialog" aria-labelledby="login" aria-hidden="false">
        <table class="table table-bordered">
            <thead>
                @if (CurrentContext.IsLogged() == true)
                { 
                    if(CurrentContext.GetCurUser().UserID==@Model.UserID)
                    { 
                <tr>
                    <th>STT</th>
                    <th>Username</th>
                    <th>Ra giá</th>
                    <th>Thời gian</th>
                    <th>Hành động</th>
                    <th>Thông tin</th>
                </tr>
                   }
                   if(CurrentContext.GetCurUser().UserID!=@Model.UserID)
                   {
                  <tr>
                    <th>STT</th>
                    <th>Username</th>
                    <th>Ra giá</th>
                    <th>Thời gian</th>
                </tr>
                   }
                }
                @if (CurrentContext.IsLogged() == false)
                {
                  <tr>
                    <th>STT</th>
                    <th>Username</th>
                    <th>Ra giá</th>
                    <th>Thời gian</th>
                </tr>
                }

            </thead>
        
                @{
                    var stt = 1;
                }
                @foreach (var item in @Model.Biddings)
                {
                    var temp = item.User.UserName;
                    temp = (temp.Substring(0, temp.Length - 3) + "***");
                    if(CurrentContext.IsLogged()==true)
                    { 
                         if(CurrentContext.GetCurUser().UserID==@Model.UserID && item.BidStatus!= 1)
                         { 
                    <tr>
                     <th>@stt</th>
                     <th>@item.User.UserName</th>
                     <th>@item.ProductBid VNĐ</th>
                     <th>@item.DateBid</th>
                      <th>
                          <button id="deleteUser" data-id="@item.UserID"><i class="icon-remove icon-white"></i></button>
                      </th>
                     <th>Thông tin người đấu giá</th>
                   </tr>
                         }
                         if(CurrentContext.GetCurUser().UserID!=@Model.UserID && item.BidStatus!= 1)
                         {
                      <tr>
                         <th>@stt</th>
                         <th>@temp</th>
                         <th>@item.ProductBid VNĐ</th>
                         <th>@item.DateBid</th>
                       </tr>
                         }
                    }

                    if (CurrentContext.IsLogged() == false && item.BidStatus != 1)
                    {
                        <tr>
                         <th>@stt</th>
                        <th>@temp</th>
                         <th>@item.ProductBid VNĐ</th>
                         <th>@item.DateBid</th>
                       </tr>
                    }
                    stt++;
                }    
            <tbody>
            </tbody>
        </table>
</div>
    <form class="form-horizontal qtyFrm">
        @if(Model.ProductStatus == 1)
        {
         <div class="control-group">
            <div class="countdown">
                Còn <span id="clock"></span>
            </div>
        </div>
        }
        else
        {
         <div class="control-group">
            <div class="countdown">
               Đấu giá đã kết thúc
            </div>
        </div>
        }

    </form>
<hr class="soft clr" />
<p>
    @Model.ProductDes
</p>
<a class="btn btn-small pull-right" href="#detail">Thông tin chi tiết</a>
<br class="clr" />
<a href="#" name="detail"></a>
<hr class="soft" />
</div>

<div class="span9">
    <ul id="productDetail" class="nav nav-tabs">
        <li class="active"><a href="#home" data-toggle="tab">Chi tiết sản phẩm</a></li>
        <li><a href="#profile" data-toggle="tab">Sản phẩm liên quan</a></li>
    </ul>
    <div id="myTabContent" class="tab-content">
        <div class="tab-pane fade active in" id="home">
            <h4>Product Information</h4>
            <table class="table table-bordered">
                <tbody>
                    <tr class="techSpecRow"><th colspan="2">Product Details</th></tr>
                    <tr class="techSpecRow"><td class="techSpecTD1">Brand: </td><td class="techSpecTD2">Fujifilm</td></tr>
                    <tr class="techSpecRow"><td class="techSpecTD1">Model:</td><td class="techSpecTD2">FinePix S2950HD</td></tr>
                    <tr class="techSpecRow"><td class="techSpecTD1">Released on:</td><td class="techSpecTD2"> 2011-01-28</td></tr>
                    <tr class="techSpecRow"><td class="techSpecTD1">Dimensions:</td><td class="techSpecTD2"> 5.50" h x 5.50" w x 2.00" l, .75 pounds</td></tr>
                    <tr class="techSpecRow"><td class="techSpecTD1">Display size:</td><td class="techSpecTD2">3</td></tr>
                </tbody>
            </table>

            <h5>Features</h5>
            <p>
                14 Megapixels. 18.0 x Optical Zoom. 3.0-inch LCD Screen. Full HD photos and 1280 x 720p HD movie capture. ISO sensitivity ISO6400 at reduced resolution. Tracking Auto Focus. Motion Panorama Mode. Face Detection technology with Blink detection and Smile and shoot mode. 4 x AA batteries not included. WxDxH 110.2 ×81.4x73.4mm. Weight 0.341kg (excluding battery and memory card). Weight 0.437kg (including battery and memory card).<br />
                OND363338
            </p>

            <h4>Editorial Reviews</h4>
            <h5>Manufacturer's Description </h5>
            <p>
                With a generous 18x Fujinon optical zoom lens, the S2950 really packs a punch, especially when matched with its 14 megapixel sensor, large 3.0" LCD screen and 720p HD (30fps) movie capture.
            </p>

            <h5>Electric powered Fujinon 18x zoom lens</h5>
            <p>
                The S2950 sports an impressive 28mm – 504mm* high precision Fujinon optical zoom lens. Simple to operate with an electric powered zoom lever, the huge zoom range means that you can capture all the detail, even when you're at a considerable distance away. You can even operate the zoom during video shooting. Unlike a bulky D-SLR, bridge cameras allow you great versatility of zoom, without the hassle of carrying a bag of lenses.
            </p>
            <h5>Impressive panoramas</h5>
            <p>
                With its easy to use Panoramic shooting mode you can get creative on the S2950, however basic your skills, and rest assured that you will not risk shooting uneven landscapes or shaky horizons. The camera enables you to take three successive shots with a helpful tool which automatically releases the shutter once the images are fully aligned to seamlessly stitch the shots together in-camera. It's so easy and the results are impressive.
            </p>

            <h5>Sharp, clear shots</h5>
            <p>
                Even at the longest zoom settings or in the most challenging of lighting conditions, the S2950 is able to produce crisp, clean results. With its mechanically stabilised 1/2 3", 14 megapixel CCD sensor, and high ISO sensitivity settings, Fujifilm's Dual Image Stabilisation technology combines to reduce the blurring effects of both hand-shake and subject movement to provide superb pictures.
            </p>
        </div>
        <div class="tab-pane fade" id="profile">
            <div id="myTab" class="pull-right">
                <a hidden href="#listView" data-toggle="tab"><span class="btn btn-large"><i class="icon-list"></i></span></a>
            </div>
        </div>
    </div>
    <div class="tab-pane active" id="blockView">
        <ul class="thumbnails">
            <li class="span3">
                <div class="thumbnail">
                    <i class="tag"></i>
                    <a href="product_details.html"><img src="themes/images/products/b2.jpg" alt=""></a>
                    <div class="caption">
                        <h5>Product name</h5>
                        <h5>Giá hiện tại</h5>
                        <h4><a class="btn btn-primary" href="product_details.html">Đấu giá</a><a href=""> <span class="pull-right">Username</span></a></h4>
                    </div>
                </div>
            </li>
        </ul>
        <hr class="soft" />
    </div>
</div>
<br class="clr">