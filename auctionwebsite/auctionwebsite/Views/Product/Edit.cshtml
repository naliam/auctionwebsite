@model auctionwebsite.Models.Product
@using auctionwebsite.Helpers
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/user_layout.cshtml";
}
<!DOCTYPE html>
<style>
    input[type="file"] {
        display: block;
    }

    .imageThumb {
        max-height: 75px;
        border: 2px solid;
        padding: 1px;
        cursor: pointer;
    }

    .pip {
        display: inline-block;
        margin: 10px 10px 0 0;
    }

    .remove {
        display: block;
        background: #444;
        border: 1px solid black;
        color: white;
        text-align: center;
        cursor: pointer;
    }
    .remove2 {
        display: block;
        background: #444;
        border: 1px solid black;
        color: white;
        text-align: center;
        cursor: pointer;
    }

        .remove:hover {
            background: white;
            color: black;
        }
</style>


<div class="span9">
    <ul class="breadcrumb">
        <li><a href="index.html">Trang chủ</a> <span class="divider">/</span></li>
        <li><a href="products.html">Tài khoản</a> <span class="divider">/</span></li>
        <li class="active">Sửa sản phẩm</li>
    </ul>
    </ul>
    <h3>Đấu giá</h3>
    <hr class="soft" />
    <div class="well">
        @if (ViewBag.Errormsg != null)
        {
            <div class="alert alert-error">
                @ViewBag.Errormsg
            </div>
        }
        @using (Html.BeginForm("Edit", "Product", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true)
                <div class="control-group">
                    <label class="control-label">Danh mục tổng hợp<sup>*</sup></label>
                    <div class="controls">
                        <input type="text" id="ID" name="ID" value="@ViewBag.Cateparent" readonly />
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label">Danh mục<sup>*</sup></label>
                    <div class="controls">
                        <input type="text" id="ID2" name="ID2" value="@ViewBag.CateName" readonly/>
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label">Tên sản phẩm <sup>*</sup></label>
                    <div class="controls">
                        @Html.EditorFor(model => model.ProductName)
                        @Html.ValidationMessageFor(model => model.ProductName, null, new { @class = "text-danger" })
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label">Giá sản phẩm <sup>*</sup></label>
                    <div class="controls">
                        @Html.TextBoxFor(model => model.ProductPrice)
                        @Html.ValidationMessageFor(model => model.ProductPrice, null, new { @class = "text-danger" })
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label">Giá mua liền sản phẩm <sup>*</sup></label>
                    <div class="controls">
                        @Html.TextBoxFor(model => model.ProductSoldInstantPrice)
                        @Html.ValidationMessageFor(model => model.ProductSoldInstantPrice, null, new { @class = "text-danger" })
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label">Bước giá <sup>*</sup></label>
                    <div class="controls">
                        @Html.TextBoxFor(model => model.ProductTickSize)
                        @Html.ValidationMessageFor(model => model.ProductTickSize, null, new { @class = "text-danger" })
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label">Ngày kết thúc đấu giá  <sup>*</sup></label>
                    <div class="controls">
                        @Html.TextBoxFor(model => model.ProductDateSold, new { @class = "datepicker" })
                        @Html.ValidationMessageFor(model => model.ProductDateSold)
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label">Điểm tham gia đấu giá </label>
                    <div class="controls">
                        @Html.TextBoxFor(model => model.ProductPointRequired, new { @Value = "100" }) %
                        @Html.ValidationMessageFor(model => model.ProductPointRequired)
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label" for="textarea">Mô tả</label>
                    <div class="controls">
                        @Html.TextAreaFor(model => model.ProductDes, new { @cols = "80", @rows = "4", @class = "input-xxlarge" })
                        @Html.ValidationMessageFor(model => model.ProductDes, null, new { @class = "text-danger" })
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label">Hình ảnh *</label>
                    <div class="controls">
                        <span class="pip"><img src="~/Img/@(Model.ProductID+"_"+Model.ProductPicName)" id="temp" class="imageThumb" width="100" height="100" /><br /></span> </div>
                </div>

                <div class="control-group">
                    <button type="button" class="btn btn-primary" id="addImages">Thêm ảnh phụ</button>
                    @if(Model.FileDetails.Count()==0)
                    {
                      <div id="insert" style="display: none;">
                        <div class="control-group">
                            <label class="control-label">Hình ảnh phụ*</label>
                            <div class="controls">
                                <input accept="image/*" id="fileSubInput" name="fileSubInput" type="file" onchange="readURL1(this);" multiple="multiple">
                            </div>
                        </div>
                    </div>
                    }
                    else
                    {
                       <div id="insert">
                        <div class="control-group">
                            <label class="control-label">Hình ảnh phụ*</label>
                            <div class="controls">
                                <input accept="image/*" id="fileSubInput" name="fileSubInput" type="file" onchange="readURL1(this);" multiple="multiple">
                                @foreach (var item in Model.FileDetails)
                                {
                                    <span class="pip" ><img class="imageThumb" id="@item.FileDetailID" src="~/Img/@(Model.ProductID+"_"+item.FileDetailID+"_"+item.FileName)"><br/><a data-id="@item.FileDetailID" class="remove">Xóa ảnh</a></span>
                                }
                            </div>
                        </div>
                    </div>
                    }
                </div>


                <p><sup>*</sup>Các trường cần thiết phải nhập</p>

                <div class="control-group">
                    <div class="controls">
                        @Html.TextBoxFor(model => model.UserUploadID, new { @Value = @CurrentContext.GetCurUser().UserID, style = "display: none;" })
                        @Html.TextBoxFor(model => model.CateparentID, new { @Value = @Model.CateparentID, style = "display: none;" })
                        @Html.TextBoxFor(model => model.CateID, new { @Value = @Model.CateID, style = "display: none;" })
                        @Html.TextBoxFor(model => model.ProductID, new { @Value = @Model.ProductID, style = "display: none;" })
                        <input class="btn btn-large btn-success" type="submit" value="Đăng ký đấu giá" />
                    </div>
                </div>
            </div>
        }

    </div>
</div>
</div></div>

@section Scripts
{
    <script type="text/javascript">
    $(document).ready(function () {
        $('#addImages').click(function () {
            $("#insert").toggle();
        });
        $('.datepicker').datetimepicker();
        var counter = 0;
        if (window.File && window.FileList && window.FileReader) {
            $("#fileSubInput").on("change", function (e) {
                    var files = e.target.files,
                      filesLength = files.length;
                    for (var i = 0; i < filesLength; i++) {
                        var f = files[i]
                        var fileReader = new FileReader();
                        fileReader.onload = (function (e) {
                            var file = e.target;
                            $("<span class=\"pip\">" +
                              "<img class=\"imageThumb\" src=\"" + e.target.result + "\" title=\"" + file.name + "\"/>" +
                              "<br/><span class=\"remove2\">Xóa ảnh</span>" +
                              "</span>").insertAfter("#fileSubInput");
                            $(".remove2").click(function () {
                                $(this).parent(".pip").remove();
                            });
                        });
                        fileReader.readAsDataURL(f);
                    }
            }); 
            $("#fileMainInput").on("change", function (e) {
                var files = e.target.files,
                  filesLength = files.length;
                for (var i = 0; i < filesLength; i++) {
                    var f = files[i]
                    var fileReader = new FileReader();
                    fileReader.onload = (function (e) {
                        var file = e.target;
                        $("<span class=\"pip\">" +
                          "<img class=\"imageThumb\" src=\"" + e.target.result + "\" title=\"" + file.name + "\"/>" +
                          "<br/><span class=\"remove2\">Xóa ảnh</span>" +
                          "</span>").insertAfter("#fileMainInput");
                        $(".remove2").click(function () {
                            $(this).parent(".pip").remove();
                        });
                    });
                    fileReader.readAsDataURL(f);
                }
            });
        } else {
            alert("Your browser doesn't support to File API")
        }
        $(".remove").click(function (e) {
            e.preventDefault();
            var $ctrl = $(this);
            if (confirm('Bạn có muốn xóa tập tin này không ?')) {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("DeleteFile")',
                    dataType: 'json',
                    data: { id: $(this).data('id') },
                    success: function (data) {
                        $(this).parent(".pip").remove();
                       },
                        error:function(ex){
                            alert("Fail "+ex.Message);
                        }
                });
            }
        });
 
    });
    </script>
}
